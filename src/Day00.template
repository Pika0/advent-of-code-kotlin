fun main() {
    fun part1(input: String): Int {
        val lines = input.lines()
        return lines.size
    }

    fun part2(input: String): Int {
        val lines = input.lines()
        return lines.size
    }


    val samplesAndTargets: List<Triple<String, Int?, Int?>> = listOf(
        Triple(
            """
""",
            null, null
        ),
    )
    samplesAndTargets.withIndex().forEach { (index, sample) ->
        val (inputWithNewline, p1Target, p2Target) = sample
        val input = inputWithNewline.trim('\n')
        if (p1Target != null) {
            val check1 = part1(input)
            check(check1 == p1Target) {
                println("sample input[$index] part-1:  $check1 instead of $p1Target")
            }
        }
        if (p2Target != null) {
            val check2 = part2(input)
            check(check2 == p2Target) {
                println("sample input[$index] part-2:  $check2 instead of $p2Target")
            }
        }
    }

//
//    // Or read a large test input from the `src/Day%%0DAY%%_test.txt` file:
//    val testInput = readInput("Day%%0DAY%%_test")
//    check(part1(testInput) == 1)

    // download input (if needed) into day%%0DAY%%.txt.  return list of lines
    val input = loadAndReadInput(%%DAY%%, 2024)
    println("part 1 answer: ${part1(input)}")
    println("part 2 answer: ${part2(input)}")
}
